const filledMap = new Map();
      
function getIsLinePixel(x, y) {
  if(x >= boundariesImageData.width || y >= boundariesImageData.height) {
    return false;
  }
  return ImageDataUtils.getColorFromCoords(boundariesImageData, x, y).a > 0;
}

for(let row = 1; row < height; row++) {
  let isPixelOnLeftToLatestLineFilled = false;

  for(let column = 1; column < width; column++) {
    const isCurrentLinePixel = getIsLinePixel(column, row);
    const isLeftLinePixel = getIsLinePixel(column - 1, row);
    const isLeftFilled = filledMap.get(`${column - 1},${row}`);
    const isRightLinePixel = getIsLinePixel(column + 1, row);
    const isTopLinePixel = getIsLinePixel(column, row - 1);
    const isTopFilled = filledMap.get(`${column},${row - 1}`);

    if(
        !isCurrentLinePixel &&
        (isLeftLinePixel || isLeftFilled) &&
        (isTopLinePixel || isTopFilled) &&
        !isPixelOnLeftToLatestLineFilled
      ) {
      const primaryColor = ImageDataUtils.getColorFromCoords(primaryImageData, column, row);
      ImageDataUtils.setColorAtCoords(selectionImageData, column, row, primaryColor);
      ImageDataUtils.setColorAtCoords(primaryImageData, column, row, colorData.secondary);
      filledMap.set(`${column},${row}`, true);

      if(isRightLinePixel) {
        isPixelOnLeftToLatestLineFilled = true
      }
    } else if(!isCurrentLinePixel && isRightLinePixel) {
      isPixelOnLeftToLatestLineFilled = false;
    }
  }
}